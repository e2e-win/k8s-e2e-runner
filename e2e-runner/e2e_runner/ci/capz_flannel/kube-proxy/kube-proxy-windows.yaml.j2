---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kube-proxy-windows
  namespace: kube-system
  labels:
    app: kube-proxy
data:
  init.ps1: |
    $ErrorActionPreference = "Stop"

    mkdir -force /host/var/lib/kube-proxy/var/run/secrets/kubernetes.io/serviceaccount

    cp -force /var/lib/kube-proxy/* /host/var/lib/kube-proxy
    cp -force /var/run/secrets/kubernetes.io/serviceaccount/* /host/var/lib/kube-proxy/var/run/secrets/kubernetes.io/serviceaccount #FIXME?

    $networkName = (Get-Content /host/etc/cni/net.d/10-flannel.conf | ConvertFrom-Json).name

    yq eval -i ".winkernel.networkName = `"`"${networkName}`"`"" /host/var/lib/kube-proxy/config.conf
{%- if flannel_mode == "overlay" %}
    $sourceVip = ((cat /host/k/sourceVip.json | ConvertFrom-Json).ip4.ip -split '/')[0]
    yq eval -i ".winkernel.sourceVip = `"`"${sourceVip}`"`"" /host/var/lib/kube-proxy/config.conf
    yq eval -i '.featureGates.WinOverlay = true' /host/var/lib/kube-proxy/config.conf
{%- endif %}
{%- if enable_win_dsr == "true" %}
    yq eval -i '.winkernel.enableDSR = true' /host/var/lib/kube-proxy/config.conf
    yq eval -i '.featureGates.WinDSR = true' /host/var/lib/kube-proxy/config.conf
{%- endif %}
    yq eval -i '.mode = ""kernelspace""' /host/var/lib/kube-proxy/config.conf

  run.ps1: |
    $ErrorActionPreference = "Stop"

    mkdir -force /host/k/kube-proxy
    if(Test-Path /host/build/kube-proxy.exe) {
      cp -force /host/build/kube-proxy.exe /k/kube-proxy/kube-proxy.exe
    }
    cp -force /k/kube-proxy/kube-proxy.exe /host/k/kube-proxy/kube-proxy.exe

    wins cli process run --path /k/kube-proxy/kube-proxy.exe --args "--v=4 --config=/var/lib/kube-proxy/config.conf --enable-dsr={{ enable_win_dsr }} --hostname-override=$env:NODE_NAME"

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-proxy-windows
  namespace: kube-system
  labels:
    k8s-app: kube-proxy
spec:
  selector:
    matchLabels:
      k8s-app: kube-proxy-windows
  template:
    metadata:
      labels:
        k8s-app: kube-proxy-windows
    spec:
      serviceAccountName: kube-proxy
      initContainers:
      - name: init-kube-proxy
        image: k8swin.azurecr.io/kube-proxy-windows:{{ kubernetes_version }}-{{ server_core_tag }}
        command:
        - powershell
        args:
        - -file
        - /var/lib/kube-proxy-windows/init.ps1
        volumeMounts:
        - name: host
          mountPath: /host
        - name: wins
          mountPath: \\.\pipe\rancher_wins
        - name: kube-proxy
          mountPath: /var/lib/kube-proxy
        - name: kube-proxy-windows
          mountPath: /var/lib/kube-proxy-windows
      containers:
      - name: kube-proxy
        image: k8swin.azurecr.io/kube-proxy-windows:{{ kubernetes_version }}-{{ server_core_tag }}
        command:
        - powershell
        args:
        - -file
        - /var/lib/kube-proxy-windows/run.ps1
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        volumeMounts:
        - name: host
          mountPath: /host
        - name: wins
          mountPath: \\.\pipe\rancher_wins
        - name: kube-proxy-windows
          mountPath: /var/lib/kube-proxy-windows
      nodeSelector:
        kubernetes.io/os: windows
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - operator: Exists
      volumes:
      - configMap:
          defaultMode: 420
          name: kube-proxy-windows
        name: kube-proxy-windows
      - configMap:
          name: kube-proxy
        name: kube-proxy
      - hostPath:
          path: /
        name: host
      - name: wins
        hostPath:
          path: \\.\pipe\rancher_wins
          type: null
  updateStrategy:
    type: RollingUpdate
