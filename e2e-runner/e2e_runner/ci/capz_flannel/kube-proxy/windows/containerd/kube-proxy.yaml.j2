---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-proxy-windows
  namespace: kube-system
  labels:
    k8s-app: kube-proxy
spec:
  selector:
    matchLabels:
      k8s-app: kube-proxy-windows
  template:
    metadata:
      labels:
        k8s-app: kube-proxy-windows
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - windows
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      securityContext:
        windowsOptions:
          hostProcess: true
          runAsUserName: "NT AUTHORITY\\system"
      hostNetwork: true
      serviceAccountName: kube-proxy
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - operator: Exists
      initContainers:
      - name: init-kube-proxy
        image: ghcr.io/ionutbalutoiu/kube-proxy-{{ container_runtime }}-{{ win_os }}:{{ container_image_tag }}
        imagePullPolicy: Always
        command:
        - "%CONTAINER_SANDBOX_MOUNT_POINT%\\kube-proxy\\init.exe"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: ENABLE_WIN_DSR
          value: "{{ enable_win_dsr }}"
        volumeMounts:
        - name: kube-proxy
          mountPath: /var/lib/kube-proxy
      containers:
      - name: kube-proxy
        image: ghcr.io/ionutbalutoiu/kube-proxy-{{ container_runtime }}-{{ win_os }}:{{ container_image_tag }}
        imagePullPolicy: Always
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: ENABLE_WIN_DSR
          value: "{{ enable_win_dsr }}"
        volumeMounts:
        - name: kube-proxy
          mountPath: /var/lib/kube-proxy
      volumes:
      - configMap:
          name: kube-proxy
        name: kube-proxy
  updateStrategy:
    type: RollingUpdate
