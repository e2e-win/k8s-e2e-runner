---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: {{ cluster_name }}-md-win
  namespace: default
spec:
  clusterName: {{ cluster_name }}
  replicas: {{ win_minion_count }}
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
          name: {{ cluster_name }}-md-win
      clusterName: {{ cluster_name }}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: AzureMachineTemplate
        name: {{ cluster_name }}-md-win
      version: {{ ci_version }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AzureMachineTemplate
metadata:
  name: {{ cluster_name }}-md-win
  namespace: default
spec:
  template:
    spec:
      location: {{ azure_location }}
      osDisk:
        diskSizeGB: 128
        managedDisk:
          storageAccountType: Premium_LRS
        osType: Windows
      sshPublicKey: {{ azure_ssh_public_key_b64 }}
      vmSize: {{ win_minion_size }}
      image:
        sharedGallery:
          gallery: {{ win_minion_image_gallery }}
          subscriptionID: {{ azure_subscription_id }}
          resourceGroup: {{ win_minion_image_rg }}
          name: {{ win_minion_image_definition }}
          version: {{ win_minion_image_version }}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: {{ cluster_name }}-md-win
  namespace: default
spec:
  template:
    spec:
      files:
      - contentFrom:
          secret:
            key: worker-node-azure.json
            name: {{ cluster_name }}-md-win-azure-json
        owner: root:root
        path: c:/k/azure.json
        permissions: "0644"
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-config: c:/k/azure.json
            cloud-provider: azure
{%- raw %}
          name: '{{ ds.meta_data["local_hostname"] }}'
{%- endraw %}
      preKubeadmCommands:
      - curl.exe -Lo /tmp/ssh-setup.ps1 http://{{ bootstrap_vm_address }}/scripts/ssh-setup.ps1
      - powershell -C "/tmp/ssh-setup.ps1 -CIPackagesBaseURL http://{{ bootstrap_vm_address }} -SSHPublicKey '{{ azure_ssh_public_key }}'"
{%- if k8s_bins %}
      - curl.exe -Lo /tmp/update-k8s.ps1 http://{{ bootstrap_vm_address }}/scripts/update-k8s.ps1
      - powershell -C "/tmp/update-k8s.ps1 -CIPackagesBaseURL http://{{ bootstrap_vm_address }} -CIVersion {{ ci_version }}"
{%- endif %}
{%- if sdn_cni_bins %}
      - curl.exe -Lo /tmp/update-sdn-cni.ps1 http://{{ bootstrap_vm_address }}/scripts/update-sdn-cni.ps1
      - powershell -C "/tmp/update-sdn-cni.ps1 -CIPackagesBaseURL http://{{ bootstrap_vm_address }}"
{%- endif %}
{%- if containerd_bins and containerd_shim_bins %}
      - curl.exe -Lo /tmp/update-containerd.ps1 http://{{ bootstrap_vm_address }}/scripts/update-containerd.ps1
      - powershell -C "/tmp/update-containerd.ps1 -CIPackagesBaseURL http://{{ bootstrap_vm_address }}"
{%- endif %}
      - curl.exe -Lo /tmp/kubeadm-bootstrap.ps1 http://{{ bootstrap_vm_address }}/scripts/kubeadm-bootstrap.ps1
      - powershell -C "/tmp/kubeadm-bootstrap.ps1 -CIPackagesBaseURL http://{{ bootstrap_vm_address }}"
