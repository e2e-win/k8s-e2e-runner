---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachinePool
metadata:
  name: {{ cluster_name }}-mp-win
  namespace: default
spec:
  clusterName: {{ cluster_name }}
  replicas: {{ win_agents_count }}
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfig
          name: {{ cluster_name }}-mp-win
      clusterName: {{ cluster_name }}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AzureMachinePool
        name: {{ cluster_name }}-mp-win
      version: {{ kubernetes_version }}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AzureMachinePool
metadata:
{%- if container_runtime == "docker" %}
  annotations:
    runtime: dockershim
{%- endif %}
{%- if container_runtime == "containerd" %}
  annotations:
    runtime: containerd
{%- endif %}
  name: {{ cluster_name }}-mp-win
  namespace: default
spec:
  location: {{ azure_location }}
  template:
    osDisk:
      diskSizeGB: 128
      managedDisk:
        storageAccountType: Premium_LRS
      osType: Windows
    sshPublicKey: {{ azure_ssh_public_key_b64 }}
    vmSize: {{ win_agent_size }}
    image:
      marketplace:
        publisher: cncf-upstream
        offer: capi-windows
        sku: {{ image_sku_windows }}
        version: latest
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfig
metadata:
  name: {{ cluster_name }}-mp-win
  namespace: default
spec:
  files:
  - contentFrom:
      secret:
        key: worker-node-azure.json
        name: {{ cluster_name }}-mp-win-azure-json
    owner: root:root
    path: c:/k/azure.json
    permissions: "0644"
  joinConfiguration:
    nodeRegistration:
{%- if container_runtime == "containerd" %}
      criSocket: npipe:////./pipe/containerd-containerd
{%- endif %}
      kubeletExtraArgs:
        azure-container-registry-config: c:/k/azure.json
        cloud-config: c:/k/azure.json
        cloud-provider: azure
{%- if container_runtime == "containerd" %}
        feature-gates: WindowsHostProcessContainers=true
{%- endif %}
{%- raw %}
      name: '{{ ds.meta_data["local_hostname"] }}'
{%- endraw %}
  preKubeadmCommands:
  - curl.exe -Lo /run/kubeadm/kubeadm-bootstrap.ps1 http://{{ bootstrap_vm_address }}/scripts/kubeadm-bootstrap.ps1
  - powershell -C "/run/kubeadm/kubeadm-bootstrap.ps1 -CIPackagesBaseURL http://{{ bootstrap_vm_address }} -CIVersion {{ kubernetes_version }}{% if k8s_bins %} -K8sBins{% endif %}{% if sdn_cni_bins %} -SDNCNIBins{% endif %}{% if containerd_bins %} -ContainerdBins{% endif %}{% if containerd_shim_bins %} -ContainerdShimBins{% endif %}"
  users:
  - groups: Administrators
    name: capi
    sshAuthorizedKeys:
    - {{ azure_ssh_public_key }}
