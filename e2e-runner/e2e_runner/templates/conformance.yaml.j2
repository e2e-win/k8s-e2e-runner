---
apiVersion: v1
kind: Pod
metadata:
  name: alpine
spec:
  containers:
  - name: alpine
    image: alpine:latest
    volumeMounts:
    - name: output
      mountPath: /output
    command:
    - sleep
    args:
    - infinity
  volumes:
  - name: output
    hostPath:
      path: /tmp/output
  priorityClassName: system-node-critical
  tolerations:
  - operator: Exists
    effect: NoSchedule
  nodeSelector:
    kubernetes.io/os: linux
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8s-admin
  namespace: default
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: k8s-admin-role-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: k8s-admin
  namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: conformance-tests
spec:
  containers:
  - name: conformance-tests
    image: {{ conformance_image }}
    env:
    - name: KUBE_TEST_REPO_LIST
      value: /repo-list/repos.yaml
    volumeMounts:
    - name: repo-list
      mountPath: /repo-list
      readOnly: true
    - name: output
      mountPath: /output
{%- if "docker-config-file" in e2e_flags %}
    - name: docker-creds
      mountPath: /docker-creds
      readOnly: true
{%- endif %}
    command:
    - /usr/local/bin/ginkgo
    args:
{%- for key, value in ginkgo_flags.items() %}
    - --{{ key }}={{ value }}
{%- endfor %}
    - /usr/local/bin/e2e.test
    - --
{%- for key, value in e2e_flags.items() %}
    - --{{ key }}={{ value }}
{%- endfor %}
  volumes:
  - name: repo-list
    configMap:
      name: repo-list
  - name: output
    hostPath:
      path: /tmp/output
{%- if "docker-config-file" in e2e_flags %}
  - name: docker-creds
    secret:
      secretName: docker-creds
{%- endif %}
  restartPolicy: Never
  serviceAccountName: k8s-admin
  priorityClassName: system-node-critical
  tolerations:
  - operator: Exists
    effect: NoSchedule
  nodeSelector:
    kubernetes.io/os: linux
