plank:
  default_decoration_configs:
    "*":
      timeout: 12h
      grace_period: 15m
      gcs_configuration:
        bucket: gs://k8s-ovn
        path_strategy: explicit
        default_org: kubernetes
        default_repo: kubernetes
      gcs_credentials_secret: service-account
      skip_cloning: true
      utility_images:
        clonerefs: gcr.io/k8s-prow/clonerefs:v20210319-2181a9e7d7
        entrypoint: gcr.io/k8s-prow/entrypoint:v20210319-2181a9e7d7
        initupload: gcr.io/k8s-prow/initupload:v20210319-2181a9e7d7
        sidecar: gcr.io/k8s-prow/sidecar:v20210319-2181a9e7d7

sinker:
  max_prowjob_age: 48h
  max_pod_age: 48h
  terminated_pod_ttl: 30m

prowjob_namespace: default
pod_namespace: test-pods
log_level: debug

presets:
- labels:
    preset-prod-azure-account: "true"
  env:
  - name: AZURE_CLIENT_ID
    valueFrom:
      secretKeyRef:
        key: AZURE_CLIENT_ID
        name: prod-azcreds
  - name: AZURE_CLIENT_SECRET
    valueFrom:
      secretKeyRef:
        key: AZURE_CLIENT_SECRET
        name: prod-azcreds
  - name: AZURE_SUB_ID
    valueFrom:
      secretKeyRef:
        key: AZURE_SUB_ID
        name: prod-azcreds
  - name: AZURE_TENANT_ID
    valueFrom:
      secretKeyRef:
        key: AZURE_TENANT_ID
        name: prod-azcreds
  - name: AZURE_STORAGE_ACCOUNT
    valueFrom:
      secretKeyRef:
        key: AZURE_STORAGE_ACCOUNT
        name: prod-azcreds
  - name: AZURE_STORAGE_ACCOUNT_KEY
    valueFrom:
      secretKeyRef:
        key: AZURE_STORAGE_ACCOUNT_KEY
        name: prod-azcreds

- labels:
    preset-ssh-key: "true"
  env:
  - name: SSH_KEY
    value: /etc/ssh/id_rsa
  - name: SSH_KEY_PUB
    value: /etc/ssh/id_rsa.pub
  volumes:
  - name: ssh
    secret:
      defaultMode: 0400
      secretName: ssh-key-default
  volumeMounts:
  - name: ssh
    mountPath: /etc/ssh
    readOnly: true

- labels:
    preset-windows-private-registry-cred: "true"
  env:
  - name: DOCKER_CONFIG_FILE
    value: /etc/docker-cred/config.json
  volumes:
  - name: windows-private-registry-cred
    secret:
      secretName: windows-private-registry-docker-config
  volumeMounts:
  - name: windows-private-registry-cred
    mountPath: /etc/docker-cred/
    readOnly: true

- labels:
    preset-kube-backup: "true"
  env:
  - name: BACKUP_KEEP_DAYS
    value: "90"
  - name: BACKUP_CONFIGMAPS
    value: "config,plugins,job-config"
  - name: BACKUP_SECRETS
    value: "default/hmac-token,default/oauth-token,test-pods/azcreds,test-pods/prod-azcreds,test-pods/service-account,test-pods/ssh-key-default,test-pods/aks-azure-cred,test-pods/aks-azure-cred-upstream,test-pods/aks-azure-ssh,test-pods/aks-azure-storage,test-pods/aks-docker-pass,test-pods/aks-service-account,test-pods/aks-ssh-key-secret,test-pods/kubeconfig"
  - name: ENCRYPTION_KEY
    value: /etc/ssh/id_rsa.pub
  - name: AZURE_STORAGE_CONTAINER_PROW_BKP
    valueFrom:
      secretKeyRef:
        key: AZURE_STORAGE_CONTAINER_PROW_BKP
        name: prod-azcreds
  volumes:
  - name: ssh
    secret:
      defaultMode: 0400
      secretName: ssh-key-default
  volumeMounts:
  - name: ssh
    mountPath: /etc/ssh
    readOnly: true

- labels:
    preset-kubeconfig: "true"
  volumes:
  - name: kubeconfig
    secret:
      defaultMode: 0400
      secretName: kubeconfig
  volumeMounts:
  - name: kubeconfig
    mountPath: /root/.kube
    readOnly: true
